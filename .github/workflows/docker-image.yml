name: Docker Image CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # Required to mount the Github Workspace to a volume
      - uses: addnab/docker-run-action@v3
        with:
          image: mxpv/podsync:latest
          options: -e PODSYNC_CONFIG_PATH=config/config.toml -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -v ${{ github.workspace }}/data:/app/data -v ${{ github.workspace }}/config:/app/config
          run: |
            echo "Running Script"
            sed -i "s/YOUTUBE_TOKEN/${{ secrets.YOUTUBE_TOKEN }}/g" config/config.toml
            sed -i "s/BUCKET_NAME/${{ secrets.BUCKET_NAME }}/g" config/config.toml
            sed -i "s/BUCKET_URL/${{ secrets.BUCKET_URL }}/g" config/config.toml
            ./podsync
            ls
      - name: Use S3cmd
        timeout-minutes: 5
        # You may pin to the exact commit or the version.
        # uses: s3-actions/s3cmd@4e3a53c3e9313f573ff3f69aec7a772366f2f8f5
        uses: s3-actions/s3cmd@v1.5.0
        with:
          # config provider to make it easier to use the cli as action
          provider: aws # optional, default is linode
          # s3 region (default region depends on the provider)
          region: ap-southeast-2 # optional
          # account id (only used with Cloudflare R2)
#           account_id: # optional
          # s3 access key
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # s3 secret key
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Interact with object storage
        run: |
          s3cmd put --recursive data s3://${{ secrets.BUCKET_NAME }}/sermons
          s3cmd info s3://${{ secrets.BUCKET_NAME }}
          s3cmd ls s3://${{ secrets.BUCKET_NAME }}
